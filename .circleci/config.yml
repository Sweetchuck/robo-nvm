
version: 2.1

.env_composer: &env_composer
    COMPOSER_NO_INTERACTION: '1'
    COMPOSER_MEMORY_LIMIT: '-1'
    COMPOSER_DISABLE_XDEBUG_WARN: '1'

orbs:
    codecov: 'codecov/codecov@1.0.4'

executors:
    php704:
        environment:
            <<: *env_composer

        docker:
            -   name: 'main'
                image: 'misterio92/ci-php-node:4.0'

    php703:
        environment:
            <<: *env_composer

        docker:
            -   name: 'main'
                image: 'misterio92/ci-php-node:3.0'

    php702:
        environment:
            <<: *env_composer

        docker:
            -   name: 'main'
                image: 'misterio92/ci-php-node:2.0'

commands:
    install_yarn:
        description: 'Install "yarn" NPM package'
        steps:
            -
                run:
                    name: 'Install Yarn'
                    command: 'npm install -g yarn@1.15.2'

    install_php_requirements:
        description: ''
        steps:
            -
                run:
                    name: 'Install required PHP extensions'
                    command: |
                        apt-get update
                        apt-get install -y php-xdebug

    composer_install:
        description: 'Install Composer dependencies with cache restore and save'
        steps:
            -   restore_cache:
                    name: 'Composer - cache restore'
                    keys:
                        - 'composer-{{ checksum "./composer.lock" }}-1'

            -   run:
                    name: 'Composer - install'
                    command: >
                        [[ -d "$(composer config vendor-dir)" ]] || composer install --no-progress

            -   save_cache:
                    name: 'Composer - cache save'
                    key: 'composer-{{ checksum "./composer.lock" }}-1'
                    paths:
                        - './bin/'
                        - './vendor/'
                        - '~/.composer/cache/'

    lint:
        description: 'Run linters'
        steps:
            -   run:
                    name: 'Run linters'
                    command: 'bin/robo lint'

    test:
        description: 'Run tests'
        steps:
            -
                run:
                    name: 'Run unit tests'
                    command: 'bin/robo test unit'
            -
                codecov/upload:
                    flags: 'unit'
                    file: './tests/_output/machine/coverage/unit/coverage.xml'
            -
                run:
                    name: 'Run acceptance tests'
                    command: 'bin/robo test acceptance'
            -
                codecov/upload:
                    flags: 'acceptance'
                    file: './tests/_output/machine/coverage/acceptance/coverage.xml'
            -
                store_test_results:
                    name: 'Store unit test results'
                    path: './tests/_output/machine/junit'

jobs:
    build:
        executor: 'php702'
        working_directory: '~/repo'
        steps:
            - 'checkout'
            - 'composer_install'
    lint:
        executor: 'php702'
        working_directory: '~/repo'
        steps:
            - 'checkout'
            - 'composer_install'
            - 'lint'
    test_php704:
        executor: 'php704'
        working_directory: '~/repo'
        steps:
            - 'checkout'
            - 'install_yarn'
            - 'install_php_requirements'
            - 'composer_install'
            - 'test'
    test_php703:
        executor: 'php703'
        working_directory: '~/repo'
        steps:
            - 'checkout'
            - 'install_yarn'
            - 'install_php_requirements'
            - 'composer_install'
            - 'test'
    test_php702:
        executor: 'php702'
        working_directory: '~/repo'
        steps:
            - 'checkout'
            - 'install_yarn'
            - 'install_php_requirements'
            - 'composer_install'
            - 'test'

workflows:
    lint_and_test:
        jobs:
            -
                build: {}
            -
                lint:
                    requires:
                        - build
            -
                test_php704:
                    requires:
                        - build
            -
                test_php703:
                    requires:
                        - build
            -
                test_php702:
                    requires:
                        - build
